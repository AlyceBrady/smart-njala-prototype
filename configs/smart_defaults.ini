[smart_defaults : ramp_defaults]

; The ACL properties in this section are specific to an application, but are
; generally the same in different environments of the same application
; (e.g., the same across production, development, or testing environments.)

; Define additional Access Control List (ACL) roles.  Format:
;    ramp.aclNonGuestRole.newRole = inheritFromExistingRole
; The 'guest' role is hard-coded in Ramp for non-logged in users.
; The 'smart_dba' role extends the 'ramp_dba' role defined in ramp_defaults
; and has the additional authorizations accorded any staff member.
ramp.aclNonGuestRole.any_staff = guest
ramp.aclNonGuestRole.smart_dba[] = ramp_dba
ramp.aclNonGuestRole.smart_dba[] = any_staff

; Define Access Control List (ACL) roles developed for Njala University.
; Roles beginning with '_' are for use in the inheritance hierarchy only
; (to greatly reduce duplication of rules) but are not the "visible"
; roles to be given to actual staff members.
; The 'developer' role has access to everything for developers' convenience.
ramp.aclNonGuestRole._min_person_access = any_staff
ramp.aclNonGuestRole._min_staff_access = _min_person_access
ramp.aclNonGuestRole._min_stu_access = _min_person_access
ramp.aclNonGuestRole._min_all_people_access[] = _min_staff_access
ramp.aclNonGuestRole._min_all_people_access[] = _min_stu_access
ramp.aclNonGuestRole.dean_stu_staff = _min_stu_access
ramp.aclNonGuestRole.dean_stu = _min_stu_access
ramp.aclNonGuestRole.fin_mgmt = _min_all_people_access
ramp.aclNonGuestRole.fin_hr_mod = _min_staff_access
ramp.aclNonGuestRole.fin_stu_mod = _min_stu_access
ramp.aclNonGuestRole._person_modifier = guest
ramp.aclNonGuestRole.hr_view = _min_all_people_access
ramp.aclNonGuestRole.hr_mod[] = hr_view
ramp.aclNonGuestRole.hr_mod[] = _person_modifier
ramp.aclNonGuestRole.curric_mod = any_staff
ramp.aclNonGuestRole.admiss_view = _min_stu_access
ramp.aclNonGuestRole.admiss_mod[] = admiss_view
ramp.aclNonGuestRole.admiss_mod[] = _person_modifier
ramp.aclNonGuestRole.any_ss = _min_all_people_access
ramp.aclNonGuestRole.sec_ss_mgmt = any_ss
ramp.aclNonGuestRole.sec_ss_staff = sec_ss_mgmt
ramp.aclNonGuestRole.campus_ss_mgmt = any_ss
ramp.aclNonGuestRole.campus_ss_staff = campus_ss_mgmt
ramp.aclNonGuestRole.acad_aff_mgmt[] = admiss_view
ramp.aclNonGuestRole.acad_aff_mgmt[] = sec_ss_mgmt
ramp.aclNonGuestRole.acad_aff_mgmt[] = campus_ss_mgmt
ramp.aclNonGuestRole.registrar[] = fin_mgmt
ramp.aclNonGuestRole.registrar[] = hr_view
ramp.aclNonGuestRole.registrar[] = acad_aff_mgmt
ramp.aclNonGuestRole.developer[] = fin_hr_mod
ramp.aclNonGuestRole.developer[] = fin_stu_mod
ramp.aclNonGuestRole.developer[] = hr_mod
ramp.aclNonGuestRole.developer[] = curric_mod
ramp.aclNonGuestRole.developer[] = admiss_mod
ramp.aclNonGuestRole.developer[] = sec_ss_staff
ramp.aclNonGuestRole.developer[] = campus_ss_staff
ramp.aclNonGuestRole.developer[] = registrar
ramp.aclNonGuestRole.developer[] = smart_dba

; Define additional Access Control List (ACL) resources.  Format:
;    Controller actions:    "controller::action"
;    Activity directories:  "activity::index::directory"
;    Document directories:  "document::index::directory"
;    Table/Report actions:  "table::action::db_table_name"  (not setting!)
; The Activity and Document directory specifications are relative to the
; ramp.activitiesDirectory and ramp.documentRoot properties, respectively.
; Other resources are defined explicitly in Ramp/Smart source code or
; implicitly in the Authorizations table.
ramp.aclResources[] = "document::index::.."
ramp.aclResources[] = "activity::index::../docs/smartDocs"
ramp.aclResources[] = "document::index::smartDocs"
ramp.aclResources[] = "activity::index::../docs/NjalaDocs"
ramp.aclResources[] = "document::index::NjalaDocs"

; Define additional Access Control List (ACL) rules.  Format:
;    "role::resource"
ramp.aclRules[] = "guest::document::index::.."
ramp.aclRules[] = "guest::activity::index::../docs/smartDocs"
ramp.aclRules[] = "guest::document::index::smartDocs"
ramp.aclRules[] = "guest::activity::index::../docs/NjalaDocs"
ramp.aclRules[] = "guest::document::index::NjalaDocs"

; Define properties that control the activities and table settings available.
ramp.menuFilename = "Smart/menu.ini"
ramp.initialActivity = "Smart/index.act"
ramp.roleBasedMenus['ramp_dba'] = "Smart/dbaMenu.ini"
ramp.roleBasedMenus['smart_dba'] = "Smart/dbaMenu.ini"
ramp.roleBasedInitActivities['ramp_dba'] = "Smart/dbaIndex.act"
ramp.roleBasedInitActivities['smart_dba'] = "Smart/dbaIndex.act"

; Define additional properties that control menus and initial activities.
ramp.roleBasedMenus['dean_stu'] = "Smart/menu.ini"
ramp.roleBasedMenus['dean_stu_staff'] = "Smart/menu.ini"
ramp.roleBasedMenus['fin_mgmt'] = "Smart/finMenu.ini"
ramp.roleBasedMenus['fin_hr_mod'] = "Smart/finMenu.ini"
ramp.roleBasedMenus['fin_stu_mod'] = "Smart/finMenu.ini"
ramp.roleBasedMenus['hr_view'] = "Smart/hrMenu.ini"
ramp.roleBasedMenus['hr_mod'] = "Smart/hrMenu.ini"
ramp.roleBasedMenus['curric_mod'] = "Smart/menu.ini"
ramp.roleBasedMenus['admiss_view'] = "Smart/admissMenu.ini"
ramp.roleBasedMenus['admiss_mod'] = "Smart/admissMenu.ini"
ramp.roleBasedMenus['sec_ss_mgmt'] = "Smart/ssMenu.ini"
ramp.roleBasedMenus['sec_ss_staff'] = "Smart/ssMenu.ini"
ramp.roleBasedMenus['acad_aff_mgmt'] = "Smart/secMenu.ini"
ramp.roleBasedMenus['registrar'] = "Smart/secMenu.ini"
ramp.roleBasedMenus['developer'] = "devMenu.ini"
ramp.roleBasedInitActivities['fin_mgmt'] = "Smart/finIndex.act"
ramp.roleBasedInitActivities['fin_hr_mod'] = "Smart/finIndex.act"
ramp.roleBasedInitActivities['fin_stu_mod'] = "Smart/finIndex.act"
ramp.roleBasedInitActivities['hr_view'] = "Smart/hrIndex.act"
ramp.roleBasedInitActivities['hr_mod'] = "Smart/hrIndex.act"
ramp.roleBasedInitActivities['curric_mod'] = "Smart/index.act"
ramp.roleBasedInitActivities['admiss_mod'] = "Smart/admissIndex.act"
ramp.roleBasedInitActivities['admiss_view'] = "Smart/admissIndex.act"
ramp.roleBasedInitActivities['sec_ss_mgmt'] = "Smart/ssIndex.act"
ramp.roleBasedInitActivities['sec_ss_staff'] = "Smart/ssIndex.act"
ramp.roleBasedInitActivities['acad_aff_mgmt'] = "Smart/secIndex.act"
ramp.roleBasedInitActivities['registrar'] = "Smart/secIndex.act"
ramp.roleBasedInitActivities['developer'] = "devIndex.act"

; The properties beyond this point are likely to be customized differently
; for different application environments (e.g., demos or production,
; development, or testing environments.)  The initial properties in this
; section act as defaults for other environments.

; Define the username and password for accessing the database.
resources.db.params.username = smart
resources.db.params.password = "need_password"

; Define the name of the database holding the data.
; resources.db.params.dbname = smart
;    (needs to be set separately for each environment)

; Define properties that control the look and feel.
ramp.title = "Smart"
ramp.subtitle = "Software for Managing Academic Records and Transcripts"
ramp.applicationShortName = "Smart"
; ramp.footer = "Kalamazoo College"
ramp.icon = "/images/blueSmart.ico"
ramp.css = "/css/site.css"

